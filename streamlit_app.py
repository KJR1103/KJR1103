import streamlit as st
import pandas as pd
import math
from pathlib import Path
from datetime import datetime

# Configuration de la page : titre et ic√¥ne.
st.set_page_config(
    page_title="Tableau de bord de la croissance du PIB mondial",
    page_icon=":earth_americas:",
)

# -----------------------------------------------------------------------------
# D√©finition des fonctions utiles

@st.cache_data
def get_gdp_data():
    """
    R√©cup√®re les donn√©es du PIB √† partir d'un fichier CSV et les transforme.

    Les colonnes d'ann√©es sont pivot√©es pour obtenir trois colonnes : 
    - Country Code
    - Ann√©e
    - PIB
    Les ann√©es disponibles sont d√©termin√©es dynamiquement en fonction du CSV.
    """
    DATA_FILENAME = Path(__file__).parent / "data/gdp_data.csv"
    raw_gdp_df = pd.read_csv(DATA_FILENAME)

    # D√©termination dynamique des colonnes correspondant aux ann√©es
    year_columns = [col for col in raw_gdp_df.columns if col.isdigit()]
    MIN_YEAR = int(min(year_columns))
    MAX_YEAR = int(max(year_columns))

    # Exclusion des ann√©es 2023, 2024 et 2025
    year_columns = [col for col in year_columns if int(col) < 2023]

    # Transformation des donn√©es (pivot des colonnes d'ann√©es)
    gdp_df = raw_gdp_df.melt(
        id_vars=["Country Code", "Country Name"],
        value_vars=year_columns,
        var_name="Ann√©e",
        value_name="PIB",
    )

    # Conversion de la colonne Ann√©e en entier
    gdp_df["Ann√©e"] = pd.to_numeric(gdp_df["Ann√©e"])

    # Ajouter les continents pour chaque pays (donn√©es fictives √† ajuster selon la source)
    continent_map = {
        "DEU": "Europe", "FRA": "Europe", "GBR": "Europe", "BRA": "Am√©rique du Sud", "MEX": "Am√©rique du Nord",
        "JPN": "Asie", "USA": "Am√©rique du Nord", "CHN": "Asie", "IND": "Asie", "ITA": "Europe", 
        "ARG": "Am√©rique du Sud", "CAN": "Am√©rique du Nord", "AUS": "Oc√©anie", "RUS": "Europe", "ESP": "Europe", 
        "NGA": "Afrique", "SAU": "Asie", "EGY": "Afrique", "KOR": "Asie", "TUR": "Europe", "COL": "Am√©rique du Sud",
        # Vous devez ajouter ici **tous les pays du monde** avec leur continent. Vous pouvez r√©cup√©rer cette information de la base de donn√©es de la Banque Mondiale.
    }
    gdp_df["Continent"] = gdp_df["Country Code"].map(continent_map)

    return gdp_df

df_pib = get_gdp_data()

# -----------------------------------------------------------------------------
# Titre et description de l'application

st.markdown(
    """
    # :earth_americas: Tableau de bord de la croissance du PIB mondial
    **Cr√©√© par RENE TOLNO**

Plongez dans l'analyse des donn√©es du PIB gr√¢ce aux donn√©es ouvertes de la [Banque Mondiale](https://data.worldbank.org/). Cette application, con√ßue avec une approche bas√©e sur la science des donn√©es, permet d'explorer et de visualiser les tendances √©conomiques mondiales.

Les principales Fonctionnalit√©s :

‚úÖ S√©lection dynamique de la plage d‚Äôann√©es selon les donn√©es disponibles.

‚úÖ Choix des pays √† comparer pour une analyse cibl√©e.

‚úÖ Personnalisation avanc√©e des graphiques : affichage en valeur absolue ou en indice (base 100).

‚úÖ Indicateurs cl√©s : PIB en milliards de dollars et taux de croissance annuel moyen (CAGR).

Id√©al pour les √©conomistes, analystes et passionn√©s de data science souhaitant extraire des insights pertinents sur l‚Äô√©volution √©conomique mondiale. üöÄüìä

**Copyright 2025** - Donn√©es de la Banque Mondiale
    """
)

st.write("")
st.write("")

# -----------------------------------------------------------------------------
# S√©lection de la plage d'ann√©es et des pays

min_year_data = int(df_pib["Ann√©e"].min())
max_year_data = int(df_pib["Ann√©e"].max())

from_year, to_year = st.slider(
    "S√©lectionnez la plage d'ann√©es :",
    min_value=min_year_data,
    max_value=max_year_data,
    value=(min_year_data, max_year_data)
)

# Liste des pays et noms pour l'affichage dans le s√©lecteur
countries_dict = {country: name for country, name in zip(df_pib["Country Code"].unique(), df_pib["Country Name"].unique())}
countries = list(countries_dict.keys())

selected_countries = st.multiselect(
    "S√©lectionnez les pays √† afficher :",
    options=countries,
    default=countries[:6],  # Par d√©faut, affiche les 6 premiers pays
    format_func=lambda country: f"{country} - {countries_dict[country]}"  # Afficher le nom du pays avec son code
)

st.write("")

# -----------------------------------------------------------------------------
# Options suppl√©mentaires pour le graphique

type_graphique = st.radio(
    "Choisissez le type de graphique :",
    options=["Ligne", "Barres"]
)

mode_affichage = st.radio(
    "Mode d'affichage du graphique :",
    options=["Valeur absolue", "Indice (base 100)"]
)

# Filtrage des donn√©es en fonction des s√©lections
df_filtre = df_pib[
    (df_pib["Country Code"].isin(selected_countries)) &
    (df_pib["Ann√©e"] >= from_year) &
    (df_pib["Ann√©e"] <= to_year)
]

# -----------------------------------------------------------------------------
# Organisation de l'application en onglets

tabs = st.tabs(["Graphique", "Indicateurs", "Donn√©es brutes", "√Ä propos"])

# Onglet Graphique
with tabs[0]:
    st.header("√âvolution du PIB")
    
    # Cr√©ation d'un tableau crois√© : index = Ann√©e, colonnes = Country Code
    pivot_data = df_filtre.pivot(index="Ann√©e", columns="Country Code", values="PIB")
    
    # Transformation en indice si s√©lectionn√©
    if mode_affichage == "Indice (base 100)":
        pivot_data_index = pivot_data.copy()
        for country in pivot_data_index.columns:
            if from_year in pivot_data_index.index:
                base_val = pivot_data_index.loc[from_year, country]
                if base_val and not pd.isna(base_val) and base_val != 0:
                    pivot_data_index[country] = pivot_data_index[country] / base_val * 100
        pivot_data = pivot_data_index
        st.caption("Les valeurs sont exprim√©es en indice (base 100 = valeur en {0}).".format(from_year))
    
    # Affichage du graphique
    if type_graphique == "Ligne":
        st.line_chart(pivot_data)
    else:
        st.bar_chart(pivot_data)

# Onglet Indicateurs
with tabs[1]:
    st.header(f"Indicateurs pour l'ann√©e {to_year}")
    
    # Affichage du PIB (en milliards de dollars) et de la croissance totale
    st.subheader("PIB et croissance totale")
    cols = st.columns(4)
    for i, country in enumerate(selected_countries):
        with cols[i % 4]:
            try:
                first_pib = df_pib[(df_pib["Country Code"] == country) & (df_pib["Ann√©e"] == from_year)]["PIB"].iat[0]
                last_pib = df_pib[(df_pib["Country Code"] == country) & (df_pib["Ann√©e"] == to_year)]["PIB"].iat[0]
            except IndexError:
                first_pib = float("nan")
                last_pib = float("nan")
            
            first_pib_b = first_pib / 1e9 if not pd.isna(first_pib) else float("nan")
            last_pib_b = last_pib / 1e9 if not pd.isna(last_pib) else float("nan")
            
            if pd.isna(first_pib_b) or first_pib_b == 0 or from_year == to_year:
                croissance = "n/a"
                delta_color = "off"
            else:
                croissance = f"{(last_pib_b / first_pib_b):,.2f}x"
                delta_color = "normal"
            
            st.metric(
                label=f"PIB de {country}",
                value=f"${last_pib_b:,.0f} Mds",
                delta=croissance,
                delta_color=delta_color
            )
    
    st.write("")
    # Calcul et affichage du CAGR (taux de croissance annuel moyen)
    st.subheader("Croissance annuelle moyenne (CAGR)")
    cols_cagr = st.columns(4)
    for i, country in enumerate(selected_countries):
        with cols_cagr[i % 4]:
            try:
                first_val = df_pib[(df_pib["Country Code"] == country) & (df_pib["Ann√©e"] == from_year)]["PIB"].iat[0]
                last_val = df_pib[(df_pib["Country Code"] == country) & (df_pib["Ann√©e"] == to_year)]["PIB"].iat[0]
            except IndexError:
                first_val = float("nan")
                last_val = float("nan")
            
            if pd.isna(first_val) or first_val == 0 or from_year == to_year:
                cagr = "n/a"
            else:
                cagr_value = (last_val / first_val) ** (1 / (to_year - from_year)) - 1
                cagr = f"{cagr_value * 100:.2f}%"
            
            st.metric(
                label=f"CAGR {country}",
                value=cagr
            )

    # Classement par pays pour chaque ann√©e
    st.subheader("Classement des pays par PIB (tous les pays)")
    for year in range(from_year, to_year + 1):
        ranking_df = df_pib[df_pib["Ann√©e"] == year].sort_values("PIB", ascending=False)
        st.subheader(f"Classement des pays pour l'ann√©e {year}")
        st.dataframe(ranking_df[["Country Code", "Country Name", "PIB"]].head(10))  # Afficher le top 10 des pays

    # Classement par continent pour chaque ann√©e
    st.subheader(f"Classement par continent en {to_year}")
    continent_rank = df_pib[df_pib["Ann√©e"] == to_year].groupby("Continent")["PIB"].sum().sort_values(ascending=False)
    st.dataframe(continent_rank)

# Onglet Donn√©es brutes
with tabs[2]:
    st.header("Donn√©es brutes")
    st.dataframe(df_filtre)
    csv = df_filtre.to_csv(index=False).encode("utf-8")
    st.download_button("T√©l√©charger les donn√©es", data=csv, file_name="donnees_pib.csv", mime="text/csv")

# Onglet √Ä propos
with tabs[3]:
    st.header("√Ä propos")
    st.markdown(
        """
        **Tableau de bord du PIB**  
        Cr√©√© par **RENE TOLNO**

        Cette application permet d'explorer les donn√©es du PIB issues du [World Bank Open Data](https://data.worldbank.org/).  
        Vous pouvez‚ÄØ:
        - S√©lectionner la plage d'ann√©es (d√©duite automatiquement des donn√©es disponibles).
        - Choisir les pays √† afficher.
        - Personnaliser l'affichage du graphique (type et mode : valeur absolue ou indice avec base 100).
        - Visualiser des indicateurs de performance, notamment le PIB en dollars et le taux de croissance annuel moyen (CAGR).

        **Notes** :  
        - Les montants sont affich√©s en dollars am√©ricains.  
        - Les valeurs du PIB sont converties en milliards pour une lecture simplifi√©e.

        **Tous droits reserv√©s** - Donn√©es de la Banque Mondiale
        """
    )
